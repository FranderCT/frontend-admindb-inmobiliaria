/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StatisticsIndexRouteImport } from './routes/statistics/index'
import { Route as PropiedadesIndexRouteImport } from './routes/propiedades/index'
import { Route as FacturacionIndexRouteImport } from './routes/facturacion/index'
import { Route as ContratosIndexRouteImport } from './routes/contratos/index'
import { Route as ClientesIndexRouteImport } from './routes/clientes/index'
import { Route as AgentesIndexRouteImport } from './routes/agentes/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticsIndexRoute = StatisticsIndexRouteImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadesIndexRoute = PropiedadesIndexRouteImport.update({
  id: '/propiedades/',
  path: '/propiedades/',
  getParentRoute: () => rootRouteImport,
} as any)
const FacturacionIndexRoute = FacturacionIndexRouteImport.update({
  id: '/facturacion/',
  path: '/facturacion/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContratosIndexRoute = ContratosIndexRouteImport.update({
  id: '/contratos/',
  path: '/contratos/',
  getParentRoute: () => rootRouteImport,
} as any)
const ClientesIndexRoute = ClientesIndexRouteImport.update({
  id: '/clientes/',
  path: '/clientes/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentesIndexRoute = AgentesIndexRouteImport.update({
  id: '/agentes/',
  path: '/agentes/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agentes': typeof AgentesIndexRoute
  '/clientes': typeof ClientesIndexRoute
  '/contratos': typeof ContratosIndexRoute
  '/facturacion': typeof FacturacionIndexRoute
  '/propiedades': typeof PropiedadesIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agentes': typeof AgentesIndexRoute
  '/clientes': typeof ClientesIndexRoute
  '/contratos': typeof ContratosIndexRoute
  '/facturacion': typeof FacturacionIndexRoute
  '/propiedades': typeof PropiedadesIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/agentes/': typeof AgentesIndexRoute
  '/clientes/': typeof ClientesIndexRoute
  '/contratos/': typeof ContratosIndexRoute
  '/facturacion/': typeof FacturacionIndexRoute
  '/propiedades/': typeof PropiedadesIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agentes'
    | '/clientes'
    | '/contratos'
    | '/facturacion'
    | '/propiedades'
    | '/statistics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agentes'
    | '/clientes'
    | '/contratos'
    | '/facturacion'
    | '/propiedades'
    | '/statistics'
  id:
    | '__root__'
    | '/'
    | '/agentes/'
    | '/clientes/'
    | '/contratos/'
    | '/facturacion/'
    | '/propiedades/'
    | '/statistics/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgentesIndexRoute: typeof AgentesIndexRoute
  ClientesIndexRoute: typeof ClientesIndexRoute
  ContratosIndexRoute: typeof ContratosIndexRoute
  FacturacionIndexRoute: typeof FacturacionIndexRoute
  PropiedadesIndexRoute: typeof PropiedadesIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedades/': {
      id: '/propiedades/'
      path: '/propiedades'
      fullPath: '/propiedades'
      preLoaderRoute: typeof PropiedadesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/facturacion/': {
      id: '/facturacion/'
      path: '/facturacion'
      fullPath: '/facturacion'
      preLoaderRoute: typeof FacturacionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contratos/': {
      id: '/contratos/'
      path: '/contratos'
      fullPath: '/contratos'
      preLoaderRoute: typeof ContratosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clientes/': {
      id: '/clientes/'
      path: '/clientes'
      fullPath: '/clientes'
      preLoaderRoute: typeof ClientesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agentes/': {
      id: '/agentes/'
      path: '/agentes'
      fullPath: '/agentes'
      preLoaderRoute: typeof AgentesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgentesIndexRoute: AgentesIndexRoute,
  ClientesIndexRoute: ClientesIndexRoute,
  ContratosIndexRoute: ContratosIndexRoute,
  FacturacionIndexRoute: FacturacionIndexRoute,
  PropiedadesIndexRoute: PropiedadesIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
